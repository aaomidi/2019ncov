{"version":3,"file":"static/webpack/static/development/pages/index.js.1e594cfbd5368163f7e8.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, {useMemo} from \"react\"\nimport \"./index.scss\"\nimport {Card, Col, Container, Row} from \"react-bootstrap\";\nimport {LineChart, Tooltip,XAxis,CartesianGrid,Line, Legend} from \"recharts\"\nimport data from \"../data.json\"\n\nconst keys = [\"2019-nCoV\", \"Swine Flu\", \"SARS\"]\n\nconst calculate = (days, category) => {\n    const tmp = []\n\n    for (let x = 0; x < days; x++) {\n        keys.forEach(decease => {\n            if (!tmp[x])\n                tmp[x] = {'name': 'Day ' + (x+1)}\n\n            let amount = data[category][decease][x];\n            tmp[x][decease] = amount ? amount : NaN\n        })\n    }\n\n    return tmp\n}\n\nexport default function Index() {\n    const death100 = useMemo(() => calculate(100, 'deaths'), [])\n    const death45 = useMemo(() => calculate(45, 'deaths'), [])\n    const infected100 = useMemo(() => calculate(100, 'infected'), [])\n    const infected45 = useMemo(() => calculate(45, 'infected'), [])\n\n\n    return (\n        <Container>\n            <Row><Col xs={12}>\n                <h1>2019 Novel Coronavirus (2019-nCoV)</h1>\n                <p className={\"text-center\"}>Last updated: {data.lastUpdatedAt}</p>\n            </Col>\n            </Row>\n            <Row>\n                <Col sm={12}>\n                    <Chart title=\"Deaths over 100 days\" data={death100} />\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={12}>\n                    <Chart title=\"Infections over 100 days\" data={infected100} />\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={12}>\n                    <Chart title=\"Deaths over 45 days\" data={death45} />\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={12}>\n                    <Chart title=\"Infections over 45 days\" data={infected45} />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nconst Chart = ({title, data}) => {\n    return <Card>\n        <Card.Header>{title}</Card.Header>\n        <Card.Body>\n            <LineChart\n                width={400}\n                height={400}\n                data={data}\n                margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" />\n                <Tooltip />\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <Line type=\"monotone\" dataKey={\"2019-nCoV\"} stroke=\"#ff7300\" yAxisId={0} dot={false} strokeWidth={2} legendType={\"circle\"} />\n                <Line type=\"monotone\" dataKey={\"Swine Flu\"} stroke=\"#007300\" yAxisId={0} dot={false} legendType={\"triangle\"}/>\n                <Line type=\"monotone\" dataKey={\"SARS\"} stroke=\"#0073ff\" yAxisId={0} dot={false} legendType={\"star\"}/>\n                <Legend/>\n            </LineChart>\n        </Card.Body>\n    </Card>\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAVA;AACA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}