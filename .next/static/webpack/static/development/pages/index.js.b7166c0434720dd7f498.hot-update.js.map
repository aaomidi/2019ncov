{"version":3,"file":"static/webpack/static/development/pages/index.js.b7166c0434720dd7f498.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\"\nimport \"./index.scss\"\nimport {Card, Col, Container, Row} from \"react-bootstrap\";\nimport {LineChart, Tooltip,XAxis,CartesianGrid,Line} from \"recharts\"\nimport data from \"../data.json\"\n\nexport default function Index() {\n\n    console.log(data);\n\n    return (\n        <Container>\n            <Row><Col xs={12}>\n                <h1>2019 Novel Coronavirus (2019-nCoV)</h1>\n                <p className={\"text-center\"}>Last updated: {data.lastUpdatedAt}</p>\n            </Col></Row>\n            <Row><Col sm={6}>\n                <Chart title=\"Deaths over time\" subtitle={\"100 days\"} />\n            </Col>\n                <Col sm={6}>\n                    <Chart title=\"Infections over time\" subtitle={\"100 days\"} />\n                </Col></Row>\n            <Row><Col sm={6}>\n                <Chart title=\"Deaths over time\" subtitle={\"45 days\"} />\n            </Col>\n                <Col sm={6}>\n                    <Chart title=\"Infections over time\" subtitle={\"45 days\"} />\n                </Col></Row>\n        </Container>\n    )\n}\n\nconst Chart = ({title, subtitle, data}) => {\n    return <Card>\n        <Card.Header>{title}</Card.Header>\n        <Card.Body>\n            <LineChart\n                width={400}\n                height={400}\n                data={data}\n                margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" />\n                <Tooltip />\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" yAxisId={0} />\n                <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#387908\" yAxisId={1} />\n            </LineChart>\n            <p>{subtitle}</p>\n        </Card.Body>\n    </Card>\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}