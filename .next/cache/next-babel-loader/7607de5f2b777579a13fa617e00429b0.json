{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/home/richard/Projects/2019ncov/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useMemo } from \"react\";\nimport \"./index.scss\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport { LineChart, Tooltip, XAxis, CartesianGrid, Line } from \"recharts\";\nimport data from \"../data.json\";\n\nvar calculate = function calculate(days, category) {\n  var data = [];\n\n  var _loop = function _loop(x) {\n    _Object$keys(data[category]).forEach(function (decease) {\n      if (!data[x]) data[x] = {\n        'name': 'Day ' + (x + 1)\n      };\n      var amount = data[category][decease][x];\n      data[x][decease] = amount ? amount : 0;\n    });\n  };\n\n  for (var x = 0; x < days; x++) {\n    _loop(x);\n  }\n\n  return data;\n};\n\nexport default function Index() {\n  console.log(data);\n  var death100 = useMemo(function () {\n    return calculate(100, 'deaths');\n  }, []);\n  var death45 = useMemo(function () {\n    return calculate(45, 'deaths');\n  }, []);\n  var infected100 = useMemo(function () {\n    return calculate(100, 'infected');\n  }, []);\n  var infected45 = useMemo(function () {\n    return calculate(45, 'infected');\n  }, []);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"2019 Novel Coronavirus (2019-nCoV)\"), __jsx(\"p\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Last updated: \", data.lastUpdatedAt))), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Chart, {\n    title: \"Deaths over time\",\n    subtitle: \"100 days\",\n    data: death100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), __jsx(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Chart, {\n    title: \"Infections over time\",\n    subtitle: \"100 days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Chart, {\n    title: \"Deaths over time\",\n    subtitle: \"45 days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), __jsx(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Chart, {\n    title: \"Infections over time\",\n    subtitle: \"45 days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n}\n\nvar Chart = function Chart(_ref) {\n  var title = _ref.title,\n      subtitle = _ref.subtitle,\n      data = _ref.data;\n  var data2 = [{\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  }, {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  }, {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  }, {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  }, {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  }, {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  }, {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }];\n  return __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, title), __jsx(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(LineChart, {\n    width: 400,\n    height: 400,\n    data: data,\n    margin: {\n      top: 5,\n      right: 20,\n      left: 10,\n      bottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(XAxis, {\n    dataKey: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), __jsx(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), __jsx(CartesianGrid, {\n    stroke: \"#f5f5f5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"uv\",\n    stroke: \"#ff7300\",\n    yAxisId: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), __jsx(Line, {\n    type: \"monotone\",\n    dataKey: \"pv\",\n    stroke: \"#387908\",\n    yAxisId: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, subtitle)));\n};","map":{"version":3,"sources":["/home/richard/Projects/2019ncov/pages/index.js"],"names":["React","useMemo","Card","Col","Container","Row","LineChart","Tooltip","XAxis","CartesianGrid","Line","data","calculate","days","category","x","forEach","decease","amount","Index","console","log","death100","death45","infected100","infected45","lastUpdatedAt","Chart","title","subtitle","data2","name","uv","pv","amt","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, {useMemo} from \"react\"\nimport \"./index.scss\"\nimport {Card, Col, Container, Row} from \"react-bootstrap\";\nimport {LineChart, Tooltip,XAxis,CartesianGrid,Line} from \"recharts\"\nimport data from \"../data.json\"\n\nconst calculate = (days, category) => {\n    const data = []\n\n    for (let x = 0; x < days; x++) {\n        Object.keys(data[category]).forEach(decease => {\n            if (!data[x])\n                data[x] = {'name': 'Day ' + (x+1)}\n\n            let amount = data[category][decease][x];\n            data[x][decease] = amount ? amount : 0\n        })\n    }\n\n    return data\n}\n\nexport default function Index() {\n\n    console.log(data);\n\n    const death100 = useMemo(() => calculate(100, 'deaths'), [])\n    const death45 = useMemo(() => calculate(45, 'deaths'), [])\n    const infected100 = useMemo(() => calculate(100, 'infected'), [])\n    const infected45 = useMemo(() => calculate(45, 'infected'), [])\n\n\n    return (\n        <Container>\n            <Row><Col xs={12}>\n                <h1>2019 Novel Coronavirus (2019-nCoV)</h1>\n                <p className={\"text-center\"}>Last updated: {data.lastUpdatedAt}</p>\n            </Col></Row>\n            <Row><Col sm={6}>\n                <Chart title=\"Deaths over time\" subtitle={\"100 days\"} data={death100} />\n            </Col>\n                <Col sm={6}>\n                    <Chart title=\"Infections over time\" subtitle={\"100 days\"} />\n                </Col></Row>\n            <Row><Col sm={6}>\n                <Chart title=\"Deaths over time\" subtitle={\"45 days\"} />\n            </Col>\n                <Col sm={6}>\n                    <Chart title=\"Infections over time\" subtitle={\"45 days\"} />\n                </Col></Row>\n        </Container>\n    )\n}\n\n\n\nconst Chart = ({title, subtitle, data}) => {\n\n    const data2 = [\n        {\n            name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n        },\n        {\n            name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n        },\n        {\n            name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n        },\n        {\n            name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n        },\n        {\n            name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n        },\n        {\n            name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n        },\n        {\n            name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n        },\n    ];\n\n    return <Card>\n        <Card.Header>{title}</Card.Header>\n        <Card.Body>\n            <LineChart\n                width={400}\n                height={400}\n                data={data}\n                margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" />\n                <Tooltip />\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" yAxisId={0} />\n                <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#387908\" yAxisId={1} />\n            </LineChart>\n            <p>{subtitle}</p>\n        </Card.Body>\n    </Card>\n}"]},"metadata":{},"sourceType":"module"}